#!/usr/bin/env node

/**
 * groundskeeper
 *
 * A small utility to remove declared pragmas and console declarations from
 * string files
 * Please see: http://upload.wikimedia.org/wikipedia/en/d/dc/GroundskeeperWillie.png
 *
 * @author Luis Couto
 * @organization 15minuteslate.net
 * @contact couto@15minuteslate.net
 * @version 0.1.12
 * @requires path, fs, exec, commander.js, colors, log.js
 * @license ISC 2014, Luis Couto
 *
 *
 * @example
 * $ groundskeeper -r 0 -dc true -n App.logger -p validation,development
 */

// Dependencies
var program = require('commander'),
    groundskeeper = require('../index'),
    // Variables
    buf = '';

// Options
// .option(-shortcut, --name, "description", functionToParse, defaultValue)
program
    .version(require('../package.json').version)
    .usage(' -c [false] -p validation,test,development')
    .option('-p, --pragmas <names>',    'comma-delimited <names> to keep, everything else is removed')
    .option('-n, --namespace <names>',  'comma-delimited <names> to remove, e.g.: `App.logger,App.bucket`')
    .option('-d, --debugger [boolean]', 'If true, it will keep `debbuger;` statements', false)
    .option('-c, --console [boolean]',  'If true, it keeps `console` statements', false)
    .option('-r, --replace <string>',   'If given it will replace every console with the given value')
    .option('-v, --verbose [boolean]',  'outputs current state of procedure', false);

program.name = 'groundskeeper';

program.parse(process.argv);

// --pragmas
if (program.pragmas) {
    program.pragmas = program.pragmas.split(/ *, */);
}

// --namespace
if (program.namespace) {
    program.namespace = program.namespace.split(/ *, */);
}

process.stdin.setEncoding('utf8');
process.stdin.on('data', function (chunk) { buf += chunk; });
process.stdin.on('end', function () {
    var cleaner = groundskeeper(program);
    cleaner.write(buf);
    process.stdout.write(cleaner.toString());
}).resume();
